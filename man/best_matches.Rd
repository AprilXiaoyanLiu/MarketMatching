% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/functions.R
\name{best_matches}
\alias{best_matches}
\title{For each market, find the best matching control market
\code{best_matches} finds the best macthing control markets for each market in the dataset.
The function returns an object of type "market_matching" using dynamic time warping (dtw package).
The element called "BestMatches" is a data.frame that shows the best matching control markets and the relative distances.}
\usage{
best_matches(data = NULL, id_variable = NULL, date_variable = NULL,
  matching_variable = NULL, warping_limit = 2, parallel = TRUE,
  start_match_period = NULL, end_match_period = NULL, matches = 5)
}
\arguments{
\item{data}{input data.frame for analysis. The dataset should be structured as "stacked" time series (i.e., a panel dataset).
In other words, markets are rows and not columns -- we have a unique row for each area/time combination.}

\item{id_variable}{the name of the variable that identifies the markets}

\item{date_variable}{the time stamp variable}

\item{matching_variable}{the variable (metric) used to match the markets. For example, this could be sales or new customers}

\item{warping_limit}{the warping limit used for matching. Defauls is 2}

\item{parallel}{set to TRUE for parallel processing. Default is TRUE}

\item{start_match_period}{the start date of the matching period (pre period).
Must be a character of format "YYYY-MM-DD" -- e.g., "2015-01-01"}

\item{end_match_period}{the end date of the matching period (pre period).
Must be a character of format "YYYY-MM-DD" -- e.g., "2015-10-01"}

\item{matches}{Number of macthing markets to keep in the output}
}
\description{
For each market, find the best matching control market
\code{best_matches} finds the best macthing control markets for each market in the dataset.
The function returns an object of type "market_matching" using dynamic time warping (dtw package).
The element called "BestMatches" is a data.frame that shows the best matching control markets and the relative distances.
}
\examples{
##-----------------------------------------------------------------------
## Find best matches for each airport time series
##-----------------------------------------------------------------------
library(MarketMatching)
data(weather, package="MarketMatching")
mm <- best_matches(data=weather, id="Area",
                   date_variable="Date",
                   matching_variable="Mean_TemperatureF",
                   parallel=FALSE,
                   start_match_period="2014-01-01",
                   end_match_period="2014-10-01")
head(mm$BestMatches)
}

